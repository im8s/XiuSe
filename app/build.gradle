apply plugin: 'com.android.application'
//这个必须添加
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("GMT+08"))
}

android {

//    signingConfigs {
//        release {
//            storeFile file('keystore/shengWen.jks')
//            keyAlias ''
//            keyPassword ''
//            storePassword ''
//            //v1和v2的签名使用
////            只勾选v1签名并不会影响什么，但是在7.0上不会使用更安全的验证方式
////            只勾选V2签名7.0以下会直接安装完显示未安装，7.0以上则使用了V2的方式验证
//            v1SigningEnabled true
//            v2SigningEnabled true
//        }
//    }


    compileSdkVersion rootProject.ext.android.compileSdkVersion
    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        flavorDimensions "default"
        multiDexEnabled true

        ndk {
            abiFilters "armeabi", "armeabi-v7a", "arm64-v8a","x86","x86_64"
        }
    }

//    buildTypes {
//        release {
//            minifyEnabled false
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            signingConfig signingConfigs.release
//        }
//        debug {
//            signingConfig signingConfigs.release
//            debuggable true
//        }
//    }
    //给包命名，格式css_渠道名_版本号_打包时间.apk
    android.applicationVariants.all {
        variant ->
            variant.outputs.all {
                //这里修改apk文件名
                if (variant.buildType.name == 'release') {
                    outputFileName = "css_${variant.name}_v${variant.versionName}_${releaseTime()}.apk"
                }
            }
    }


    lintOptions {
        abortOnError false
    }

    //module 中使用了 Java1.8,必须添加这段代码
    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

    dexOptions {
        incremental true
        javaMaxHeapSize "4g"
    }

    productFlavors {
        yingyongbao {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "yingyongbao"]
            buildConfigField "String", "APP_BASE_URL", "\"http://175.27.132.226:9997/\""
        }
        //测试用渠道包
//        shengyou {
//
////            buildConfigField "String", "APP_BASE_URL", "\"http://192.168.0.110:9997/\""
//            buildConfigField "String", "APP_BASE_URL", "\"http://175.27.132.226:9997/\""
////            buildConfigField "String", "APP_BASE_URL", "\"http://101.200.131.166:9997/\""
//
//        }

    }


}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation rootProject.ext.dependencies["appcompat"]
    implementation rootProject.ext.dependencies["constraintlayout"]
//    implementation rootProject.ext.dependencies["recyclerview-v7"]
    implementation rootProject.ext.dependencies["support-design"]

//    implementation rootProject.ext.dependencies["support-appcompat-v7"]

    //腾讯IM
    implementation project(':tuikit')

    implementation project(':viewanimator')

    //上下拉刷新组件
    implementation project(':refresh:refresh-header')
    implementation project(':refresh:refresh-layout')

    implementation project(':library')

    implementation project(':ninegridview')
    implementation project(':trtcvoiceroommodule')

    implementation(name: 'alipaySdk', ext: 'aar')

    //美化代码
    implementation rootProject.ext.dependencies["rxjava"]
    implementation rootProject.ext.dependencies["rxandroid"]

    //网络请求
    implementation rootProject.ext.dependencies["okhttp"]
    implementation rootProject.ext.dependencies["logging-interceptor"]

    //网络层提取封装
    implementation rootProject.ext.dependencies["retrofit"]
    implementation rootProject.ext.dependencies["converter-gson"]
    implementation rootProject.ext.dependencies["converter-scalars"]
    implementation rootProject.ext.dependencies["adapter-rxjava2"]


    // rxlifecycle2
    implementation rootProject.ext.dependencies["rxlifecycle"]
    implementation rootProject.ext.dependencies["rxlifecycle-android"]
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
//    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    compile(rootProject.ext.dependencies["rxlifecycle-components"]) {
        exclude group: 'android.support'
    }


    //屏幕适配
    implementation rootProject.ext.dependencies["autosize"]
    //布局绑定
    kapt "com.jakewharton:butterknife-compiler:10.2.1"
    implementation rootProject.ext.dependencies["butterknife"]
//    implementation 'com.google.android.material:material:1.0.0'
//    implementation 'androidx.navigation:navigation-fragment:2.0.0'
//    implementation 'androidx.navigation:navigation-ui:2.0.0'
    annotationProcessor rootProject.ext.dependencies["butterknife-compiler"]
    //状态栏 刘海屏
    implementation rootProject.ext.dependencies["immersionbar"]

    //EventBus
    implementation rootProject.ext.dependencies["eventbus"]

    //申请权限
    implementation(rootProject.ext.dependencies["rxpermissions"]) {
        exclude module: 'rxjava'
        exclude module: 'annotation'
    }

    implementation rootProject.ext.dependencies["rxerrorhandler2"]
    implementation rootProject.ext.dependencies["timber"]

    //图片显示库Glide
    implementation rootProject.ext.dependencies["glide"]
    implementation rootProject.ext.dependencies["glide-loader-okhttp3"]
    annotationProcessor rootProject.ext.dependencies["glide-compiler"]

    //图片裁剪库
    implementation 'com.github.yalantis:ucrop:2.2.3'
    //选择器
    implementation 'com.contrarywind:Android-PickerView:4.1.9'
    implementation rootProject.ext.dependencies["Android-SpinKit"]
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'

    //banner 库
    implementation 'com.youth.banner:banner:2.0.12'
    //添加ViewPager指示器
    implementation 'com.github.hackware1993:MagicIndicator:1.6.0'

    implementation 'com.amulyakhare:com.amulyakhare.textdrawable:1.0.1'

//    implementation 'cn.bingoogolapple:bga-photopicker:2.0.2@aar'
//    implementation 'androidx.appcompat:appcompat:1.1.0'
//    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'cn.bingoogolapple:bga-baseadapter:2.0.0@aar'

    implementation 'com.github.w446108264:XhsEmoticonsKeyboard:2.0.4'

    //微信分享所需
    api 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:+'

    //高斯模糊控件
    implementation 'com.github.mmin18:realtimeblurview:1.2.1'
    //动画神器
    implementation 'com.github.svga:SVGAPlayer-Android:2.5.7'
    //万能适配器
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:3.0.4'

    implementation 'com.github.princekin-f:EasyFloat:1.3.4'
//    java+kotlin混合开发
//    kapt "com.jakewharton:butterknife-compiler:$rootProject.butterknifeVersion"
    kapt "com.github.bumptech.glide:compiler:4.11.0"

    api 'com.tencent.liteav:LiteAVSDK_TRTC:latest.release'

    // HUAWEI push sdk
//    implementation 'com.huawei.hms:push:5.0.0.300'
    // MEIZU push sdk
    implementation 'com.meizu.flyme.internet:push-internal:3.9.7'
    // google firebase
    implementation('com.google.firebase:firebase-core:17.0.0')
    // google 云消息传递
    implementation('com.google.firebase:firebase-messaging:19.0.1')
    // oppo push sdk
    implementation(name: 'oppo_com.heytap.msp-push-2.1.0', ext: 'aar')
    // vivo push sdk
    implementation(name: 'vivo_pushsdk-v2.9.0.0', ext: 'aar')

//    implementation 'top.zibin:Luban:1.1.8'

    compile 'com.github.yhaolpz:FloatWindow:1.0.9'


}
